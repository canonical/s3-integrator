# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
test_charm_libs_path = {[vars]tests_path}/integration/application-charm/lib/
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
allowlist_externals =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry install --only format --no-root
commands =
    poetry lock
    poetry run ruff check --fix {[vars]all_path} --exclude {[vars]test_charm_libs_path}
    poetry run ruff format {[vars]all_path} --exclude {[vars]test_charm_libs_path}

[testenv:lint]
description = Check code against coding style standards
commands_pre =
    poetry install --only lint,format --no-root
commands =
    poetry check --lock
    poetry run codespell {[vars]all_path}
    poetry run ruff check {[vars]all_path} --exclude {[vars]test_charm_libs_path}
    poetry run ruff format --check --diff {[vars]all_path} --exclude {[vars]test_charm_libs_path}

[testenv:unit]
description = Run unit tests
commands_pre =
    poetry install --only main,charm-libs,unit --no-root
commands =
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration]
description = Run integration tests
pass_env =
    CI
    GITHUB_OUTPUT
    SECRETS_FROM_GITHUB
commands_pre =
    poetry install --only integration --no-root
commands =
    poetry run pytest -v --tb native --log-cli-level=INFO -s --ignore={[vars]tests_path}/unit/ {posargs}
